library(shiny)
runApp("zrr.shiny")
fix(rMDM_Motion)
fix(rMDM)
fix(rMDMm)
fix(rMDM_Motion)
head(rm)
rm[,"Date"]
levels(factor(rm[,"Date"]))[1]
levels(factor(rm[,"Date"]))[2]
levels(factor(rm[,"Date"]))[1,2]
levels(factor(rm[,"Date"]))[c(1,2,3)]
head(rm[,"risk"])
head(rm)
rMDM(rm,1,1:5,8:12,1:6)
rMDM(rm,1,c(1,2,3,4,5),c(10,11,12,15),c(4,15,1,89))
rMDMm(rm,1,c(1,2,3,4,5),c(10,11,12,15),c(4,15,1,89))
rMDMm(r,c(1,2,3,4,5),c(10,11,12,15)
)
rMDM(r,c(1,2,3,4,5),c(10,11,12,15))
rMDM(r,5:10,15:19)
colnames(r)
rMDM(r,10:15,16:20)
head(rMDM(r,10:15,16:20))
rMDM(r,c(1,2,3,4,5),c(10,11,12,15))
rMDMm(r,c(1,2,3,4,5),c(10,11,12,15)
)
rMDMm(rm,1,c(1,2,3,4,5),c(10,11,12,15),c(4,15,1,89))
rMDMm(rm,1,c(1,2,3,4,5),c(10,11,12,15),1:10
)
rMDMm(rm,1,1:5,6:10,1:10)
rMDM(r,10:15,16:20)
mdm <- rMDM(r,10:15,16:20)
head(mdm)
subset(mdm,Date == "2007-01-01")[1:10,]
subset(mdm,Date == "2007-01-01")[1:10,c("qx","qy")]
rMDMm(rm,1,1:5,6:10,1:10)
r[1,]
rMDMm(rm,1,1,2,1)
source('~/R_Projects/zrr/zrr.shiny/algorithms.R', echo=TRUE)
rMDMm(rm,1,1,2,1)
source('~/R_Projects/zrr/zrr.shiny/algorithms.R', echo=TRUE)
rMDMm(rm,1,1,2,1)
rm[1,]
rm[1:2,]
rm[1,]
?print
source('~/R_Projects/zrr/zrr.shiny/algorithms.R', echo=TRUE)
rMDMm(rm,1,1:5,6:10,1:10)
source('~/R_Projects/zrr/zrr.shiny/algorithms.R', echo=TRUE)
rMDMm(rm,1,1:5,6:10,1:10)
source('~/R_Projects/zrr/zrr.shiny/algorithms.R', echo=TRUE)
rMDMm(rm,1,1:5,6:10,1:10)
source('~/R_Projects/zrr/zrr.shiny/algorithms.R', echo=TRUE)
rMDMm(rm,1,1:5,6:10,1:10)
r1 <- subset(r,Date="2007-01-01")
r1 <- subset(r,Date=="2007-01-01")
head(r1)
rMDM(r1[1,],10:15,16:20)
rMDMOneEntity(r1[1,],10:15,16:20)
rMDMm(rm,1,1:5,6:10,1)
source('~/R_Projects/zrr/zrr.shiny/algorithms.R', echo=TRUE)
rMDMOneEntity(r1[1,],10:15,16:20)
rMDMm(rm,1,1:5,6:10,1)
source('~/R_Projects/zrr/zrr.shiny/algorithms.R', echo=TRUE)
rMDMOneEntity(r1[1,],10:15,16:20)
rMDMm(rm,1,1:5,6:10,1)
r1[1,]
r1[1,c(10:15,16:20)]
lw(r1[1,c(10:15,16:20 )])
l2(r1[1,c(10:15,16:20 )])
rmx <- subset(rm,Date=="2007-01-01" % risk in levels(factor(rm[,"risk"]))[1:5])
rmx <- subset(rm,Date=="2007-01-01" & risk %in% levels(factor(rm[,"risk"]))[1:5])
head (rmx)
rmx
rmy <- subset(rm,Date=="2007-01-01" & risk %in% levels(factor(rm[,"risk"]))[6:10])
rmy
rma <- rbind(rmx,rmy)
factor(rma[,"risk"])
levels(factor(rma[,"risk"]))
r1[1,c(10:15,16:20)]
r1[1,c(10:15,16:21)]
r1[1,c(10:15,16:20)]
levels(factor(rm[,"risk"]))[1:15]
levels(factor(rm[,"risk"]))[1:10]
r1[1,c(10:20)]
colnames(r1)[c(10:20)]
colnames(r1)[c(10:19)]
rMDMOneEntity(r1[1,],10:14,15:20)
rMDMm(rm,1,1:5,6:10,1)
source('~/R_Projects/zrr/zrr.shiny/algorithms.R', echo=TRUE)
rMDMOneEntity(r1[1,],10:14,15:20)
source('~/R_Projects/zrr/zrr.shiny/algorithms.R', echo=TRUE)
rMDMOneEntity(r1[1,],10:14,15:20)
rMDMm(rm,1,1:5,6:10,1)
aggregate(x=rma[,"value"],by=list(rma[,"Code"]),FUN=l2)
r[1,]
rm(list=ls())
runApp("zrr.shiny")
runApp("zrr.shiny")
?match
runApp("zrr.shiny")
r1 <- subset(r,Country.Name %in% input$countries)
input$countries
input$xRisks
input$yRisks
input$timeIndex
Q
colnames(rm)
runApp("zrr.shiny")
runApp("zrr.shiny")
runApp("zrr.shiny")
runApp("zrr.shiny")
input$timeIndex
match(input$xRisks,risklevels)
risklevels
input$xRisks
match(input$yRisks,risklevels)
match(input$countries,countrylevels)
rMDMm_Motion(rm,input$timeIndex,match(input$xRisks,risklevels),
match(input$yRisks,risklevels),match(input$countries,countrylevels))
Q
runApp("zrr.shiny")
rMDMm_Motion(rm,input$timeIndex,match(input$xRisks,risklevels),
match(input$yRisks,risklevels),match(input$countries,countrylevels))
Q
runApp("zrr.shiny")
rMDMm_Motion(rm,input$timeIndex,match(input$xRisks,risklevels),
match(input$yRisks,risklevels),match(input$countries,countrylevels))
Q
?subset
runApp("zrr.shiny")
rMDMmS(rm,input$timeIndex,input$xRisks,input$yRisks,input$countries)
Q
runApp("zrr.shiny")
rMDMmS(rm,input$timeIndex,input$xRisks,input$yRisks,input$countries)
790/156
library(shiny)
runApp("zrr.shiny")
getwd()
ls
getwd()
library(shiny)
getwd()
setwd("/Users/roger/R_Projects/zrr")
runApp("zrr.shiny")
rma[,c("Country.Name","Date","Continent")]
lenth(rma[,c("Country.Name","Date","Continent")])
length(rma[,c("Country.Name","Date","Continent")])
?nwro
?nrow
nrow(rma[,c("Country.Name","Date","Continent")])
rma
uniq(rma[,c("Country.Name","Date","Continent")])
unique(rma[,c("Country.Name","Date","Continent")])
nrow(unique(rma[,c("Country.Name","Date","Continent")]))
nrow(qx)
ln
qx
qy
nrow(unique(rma[,c("Country.Name","Date","Continent")]))
?cbind
Q
runApp("zrr.shiny")
runApp("zrr.shiny")
runApp("zrr.shiny")
runApp("zrr.shiny")
runApp("zrr.shiny")
ret
colnames(ret)
head(ret)
ret[,"qx"] = sF + (1-2*sF) * (ret[,"qx"] - min(ret[,"qx"])) / (max(ret[,"qx"]) - min(ret[,"qx"]))
ret[,"qy"] = sF + (1-2*sF) * (ret[,"qy"] - min(ret[,"qy"])) / (max(ret[,"qy"]) - min(ret[,"qy"]))
ret <- subset(rma,Country.Name %in% countries)
ret
colnames(ret)
Q
runApp("zrr.shiny")
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages("devtools")
require(devtools)
install_github('rCharts', 'ramnathv')
?rCharts
??rCharts
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
library(rCharts)
?rCharts
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
iris
head(iris)
factor(iris[,"Species"])
levels(factor(iris[,"Species"]) )
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth, data = iris, color = 'Species', type = 'point')
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
hair_eye = as.data.frame(HairEyeColor)
rPlot(Freq ~ Hair | Eye, color = 'Eye', data = hair_eye, type = 'bar')
rPlot
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
?require
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
names(iris) = gsub("\\.", "", names(iris))
p1 <- rPlot(input$x, input$y, data = iris, color = "Species",
facet = "Species", type = 'point')
runApp("zrr.shiny.dev")
?hPlot
hPlo
hPlot
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
x<-rnorm()
x<-rnorm(1)
x
?rnorm
rnorm(100)
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
?shinyUI
?pageWithSidebar
?tagList
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
?rep
?sapply
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
?bootstrapPage
runApp("zrr.shiny.dev")
?tagList
?headerPanel
runApp("zrr.shiny.dev")
?tag
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
?bootstrapPage
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
?showOutput
runApp("zrr.shiny.dev")
?tag
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
?tags
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
drag = "#! function() {this.series.data = whatif(this.series.data, Highcharts.numberFormat(e.newY, 2)); $('#drag').html(
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
library(shiny)
runApp("zrr.shiny.dev")
install.packages("RODBC")
runApp("zrr.shiny.dev")
install.packages("RODBC")
install.packages(c("KernSmooth", "MASS", "Matrix", "cluster", "foreign", "lattice", "nlme", "nnet", "rpart", "survival"))
install.packages("RODBC")
install.packages("RODBC")
?install.packages
install.packages("RODBC")
defaults write org.R-project.R force.LANG en_US.UTF-8
?defaults
install.packages("RODBC")
library(shiny)
install.packages(shiny)
install.packages("shiny")
install.packages("reshape2")
install.packages("stringr")
install.packages("plyr")
require(devtools)
install_github('rCharts', 'ramnathv')
require(devtools)
install.packages("devtools")
require(devtools)
install_github('rCharts', 'ramnathv')
library(shiny)
runApp("zrr.shiny.dev")
library(RODBC)
con <- odbcConnect("zrr-dev")
con <- odbcConnect("zrr-dev")
sqlFetch(con,"RR_GEO_UNIT")
sqlQuery(con,"SELECT * FROM RR_GEO_UNIT")
sqlQuery(con,"SELECT * FROM RR_INDICATOR")
sqlQuery(con,"SELECT * FROM RR_TIME_PERIDO")
sqlQuery(con,"SELECT * FROM RR_TIME_PERIOD")
close(con)
con <- odbcConnect("zrr-dev")
sqlQuery(con,"SELECT * FROM RR_INDICATOR")
sqlFetch(con,"RR_GEO_UNIT")
sqlTables(con)
close(con)
con <- odbcConnect("zrr-dev")
sqlTables(con)
sqlFetch(con,RR_GEO_UNIT)
sqlQuery(con,"SELECT * FROM RR_GEO_UNIT")
close(con)
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
runApp("zrr.shiny.dev")
query
sqlQuery(con,query)
sqlQuery(con,"SELECT * FROM RR_INDICATOR WHERE FK_INDICATOR = 2")
Q
close(con)
runApp("zrr.shiny.dev")
query
sqlQuery(con,"SELECT * FROM RR_INDICATOR_VALUE WHERE FK_INDICATOR = 1")
sqlQuery(con,"SELECT * FROM RR_INDICATOR_VALUE WHERE FK_INDICATOR = 15")
sqlQuery(con,"SELECT * FROM RR_INDICATOR_VALUE WHERE FK_INDICATOR = 15.0")
sqlQuery(con,"SELECT * FROM RR_INDICATOR_VALUE WHERE FK_INDICATOR = '15")
sqlQuery(con,"SELECT * FROM RR_INDICATOR_VALUE WHERE FK_INDICATOR = '15'")
Q
runApp("zrr.shiny.dev")
query
sqlQuery(con,query)
c
