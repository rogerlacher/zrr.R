{
    "contents" : "library(shiny)\nlibrary(googleVis)\nlibrary(calibrate)\n\n# server logic for ZRR\nshinyServer(function(input, output) {\n\n  \n  #calculate the rMDM from the inputs\n  rMDMTable <- reactive({    \n    if(length(input$countries)>0 && length(input$xRisks)>0  && length(input$yRisks)> 0) {\n      # subset dataset by selected input countries\n      #c1 <- subset(countries,Name %in% input$countries)[\"ISO.3166.1\"]\n      #r1 <- subset(r,ISO.3166.1 %in% c1[,1])\n      r1 <- subset(r,Country.Name %in% input$countries)\n      # call the rMDM algorithm    \n      rMDM_Motion(r1,match(input$xRisks, colnames(r)), match(input$yRisks, colnames(r)))      \n     }\n  })\n  \n  # MDM\n  output$motion <- renderGvis({\n    if (length(rMDMTable()) > 0) {\n      # display MDM Scatter Plot\n      mdm <- rMDMTable()\n      # restrict to 1 timestamp\n      mdm <- subset(mdm,Date == mdm[1,\"Date\"])\n      gvisMotionChart(mdm, idvar=\"Country.Name\", timevar=\"Date\", options=list(height=580, width=800))                \n    }\n  })\n  \n  output$mdm <- renderPlot({\n    if (length(rMDMTable()) > 0)  {\n      mdm <- rMDMTable()\n      # restrict to 1 timestamp\n      mdm <- subset(mdm,Date == mdm[1,\"Date\"])\n      x <- mdm[,\"qx\"];\n      y <- mdm[,\"qy\"];       \n      plot(x,y, main=\"ZRR rMDM Plot\",asp=1, xlim=c(0,1), ylim=c(0,1), \n           xlab=\"xRisks\", ylab=\"yRisks\");\n      textxy(x,y,mdm[,\"Country.Name\"]);\n    }\n  })\n  \n  # Risk Walls\n  output$walls <- renderPlot({\n    # display Risk Walls\n  })\n  \n  # Choropleth map for selected risk\n  output$choropleth <- renderGvis({\n    # display choropleth map of selected risk\n    # restrict to 1 timestamp\n    #gvisGeoChart(subset(r,Date == r[1,\"Date\"])[,c(\"Code\",input$heatRisk)], \"Code\", input$heatRisk)\n    gvisGeoChart(subset(r,Date == levels(r[,\"Date\"])[input$heatIndex])[,c(\"Code\",input$heatRisk)], \"Code\", input$heatRisk)\n  })     \n  \n  # MDM as a table\n  output$table <- renderTable({\n    # display MDM table\n    #head(rMDMTable(),n=length(input$countries))\n    rMDMTable()\n  })     \n  \n  # conditionally create output widgets for xRisks and yRisks\n  # based on the xRiskCategory and yRiskCategory selections\n  output$xRisks <- renderUI({\n    riskSelection <- unlist(rh[[input$xRiskCategory]],use.names=FALSE)\n    selectInput(\"xRisks\", \"Choose x Risk:\", \n                  choices = riskSelection, multiple=TRUE)      \n  })\n  \n  output$yRisks<- renderUI({\n    riskSelection <- unlist(rh[[input$yRiskCategory]],use.names=FALSE)\n    selectInput(\"yRisks\", \"Choose y Risk:\", \n                  choices = riskSelection, multiple=TRUE)      \n  })\n})",
    "created" : 1374475158536.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2734457595",
    "id" : "6A9E9F91",
    "lastKnownWriteTime" : 1374080642,
    "path" : "~/zrr.R/shiny/server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}